mother(john, jacob), write('Jacob\'s father is '), write(john), nl.

father(john, jacob), write('Jacob\'s father is '), write(john), nl.
                           
father(john, jacob).

mother(mary, susan).

sister(peter, emily).

grandparent(peter, emily).


 /* Facts */
male(john).
male(jacob).
male(peter).
male(tom).
male(harry).

female(mary).
female(susan).
female(emily).
female(lisa).
female(ella).

parent(john, jacob).
parent(john, susan).
parent(mary, jacob).
parent(mary, susan).
parent(jacob, peter).
parent(jacob, emily).
parent(susan, tom).
parent(susan, lisa).
parent(peter, harry).
parent(emily, ella).



/* Rules */
father(Father, Child) :-
	male(Father), parent(Father, Child).

mother(Mother, Child) :-
	female(Mother), parent(Mother, Child).

sibling(Sibling1, Sibling2) :-
	parent(Parent, Sibling1), parent(Parent, Sibling2), Sibling1 \= Sibling2.

brother(Brother, Sibling) :-
	male(Brother), sibling(Brother, Sibling).

sister(Sister, Sibling) :-
	female(Sister), sibling(Sister, Sibling).

grandparent(Grandparent, Grandchild) :-
	parent(Grandparent, Parent), parent(Parent, Grandchild).

ancestor(Ancestor, Descendant) :-
	parent(Ancestor, Descendant).

ancestor(Ancestor, Descendant) :-
	parent(Ancestor, Parent), ancestor(Parent, Descendant).
